version: "3.9"

services:
  #############
  ## CLIENT ##
  client:
    container_name: prakticum-client
    image: prakticum-client
    build:
      context: .
      dockerfile: Dockerfile.client
      args:
        CLIENT_PORT: $CLIENT_PORT
    restart: always
    ports:
      - ":81"
    depends_on:
      - server
    environment:
      - CLIENT_PORT=$CLIENT_PORT
      - SERVER_PORT=$SERVER_PORT
    env_file: .env
    networks:
      - codebusters
    # command: [ "nginx", "-g", "daemon off;" ]
  #############
  ## SERVER ##
  server:
    container_name: prakticum-server
    image: prackicum-server
    build:
      context: .
      dockerfile: Dockerfile.server
      args:
        SERVER_PORT: ${SERVER_PORT}
    restart: always
    ports:
      - ":${SERVER_PORT}"
      - ":${VITE_PORT}"
    depends_on:
      - postgres
    environment:
      - SERVER_PORT=$SERVER_PORT
      - POSTGRES_HOST=$POSTGRES_DB
    env_file: .env
    networks:
      - codebusters
    command: ["./wait-for.sh", "${POSTGRES_DB}:${POSTGRES_PORT}", "--", "node", "nginx", "-g", "daemon off;", "/app/index.js" ]
    # command: ["nginx", "-g", "daemon off;"]
  ##############
  ## POSTGRES ##
  postgres:
    image: postgres:14
    ports:
      - ":${POSTGRES_PORT}"
    environment:
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_DB=$POSTGRES_DB 
    env_file: .env
    volumes:
      - /tmp/pgdata:/var/lib/postgresql/data
    networks:
      - codebusters
  ##############
  ## PGADMIN ##
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:4.18
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: secret
      PGADMIN_LISTEN_PORT: 802
    ports:
      - ":802"
    depends_on:
      - postgres
    networks:
      - codebusters
    tty: true
  ##############
  ##  NGINX  ##
  nginx:
    container_name: nginx
    hostname: nginx
    image: nginx:latest
    volumes:
      - ./utils/nginx.conf:/etc/nginx/nginx.conf
      - ./utils/conf.d:/etc/nginx/conf.d
      - ./well-known:/usr/share/nginx/html
      # - web-root:/var/www/html
      # - /utils/nginx.conf
      # - certbot-etc:/etc/letsencrypt
      # - certbot-var:/var/lib/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - server
    restart: unless-stopped
    networks:
      - codebusters
    command: [ "nginx", "-g", "daemon off;" ]
  ##############
  ## CERBOT ##
  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   volumes:
  #     - certbot-etc:/etc/letsencrypt
  #     - certbot-var:/var/lib/letsencrypt
  #     - web-root:/var/www/html
  #   depends_on:
  #     - nginx
  #   command: certonly --webroot \
  #    --webroot-path=/var/www/html \
  #    --email lyalyavava@yandex.ru \
  #    --agree-tos --no-eff-email \
  #    --staging -d your_domain \
  #    -d www.your_domain 

volumes:
  web-root:
  certbot-etc:
  certbot-var:

networks:
  codebusters:
    driver: bridge
    