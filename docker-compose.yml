version: "3.9"

services:
  #############
  ## CLIENT ##
  client:
    container_name: prakticum-client
    image: ghcr.io/crazymaza/codebusters/client:aa780b4209bf683a3f5e6c66f5bad2907608d9a9
    # build:
    #   context: .
    #   dockerfile: Dockerfile.client
    #   args:
    #     CLIENT_PORT: $CLIENT_PORT
    restart: always
    ports:
      - ":81"
    depends_on:
      - server
    environment:
      - CLIENT_PORT=$CLIENT_PORT
      - SERVER_PORT=$SERVER_PORT
    env_file: .env
    networks:
      - codebusters
    # command: [ "nginx", "-g", "daemon off;" ]
  #############
  ## SERVER ##
  server:
    container_name: prakticum-server
    image: ghcr.io/crazymaza/codebusters/server:aa780b4209bf683a3f5e6c66f5bad2907608d9a9
    # build:
      # context: .
      # dockerfile: Dockerfile.server
      # args:
      #   SERVER_PORT: ${SERVER_PORT}
    restart: always
    ports:
      - ":${SERVER_PORT}"
      - ":${VITE_PORT}"
    depends_on:
      - postgres
    environment:
      - SERVER_PORT=$SERVER_PORT
      - POSTGRES_HOST=$POSTGRES_DB
    env_file: .env
    networks:
      - codebusters
    command: ["./wait-for.sh", "${POSTGRES_DB}:${POSTGRES_PORT}", "--", "node", "/app/index.js" ]
  ##############
  ## POSTGRES ##
  postgres:
    image: postgres:14
    ports:
      - ":${POSTGRES_PORT}"
    environment:
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_DB=$POSTGRES_DB 
    env_file: .env
    volumes:
      - /tmp/pgdata:/var/lib/postgresql/data
    networks:
      - codebusters
  ##############
  ## PGADMIN ##
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:4.18
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: secret
      PGADMIN_LISTEN_PORT: 802
    ports:
      - ":802"
    depends_on:
      - postgres
    networks:
      - codebusters
    tty: true
  ##############
  ##  NGINX  ##
  nginx:
    container_name: nginx
    hostname: nginx
    image: nginx:latest
    volumes:
      - www-html:/var/www/html
      - ./utils/nginx.conf:/etc/nginx/nginx.conf
      - etc-letsencrypt:/etc/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - server
    restart: always
    networks:
      - codebusters
  ##############
  ## CERBOT ##
  certbot:
    image: certbot/certbot
    volumes:
      - etc-letsencrypt:/etc/letsencrypt
      - www-html:/var/www/html
    depends_on:
      - nginx
    networks:
      - codebusters
    command: certonly --webroot --webroot-path=/var/www/html --email lyalyavava@yandex.ru --agree-tos --no-eff-email --staging -d codebusters-road-rider-27.ya-praktikum.tech

volumes:
  www-html:
  etc-letsencrypt:

networks:
  codebusters:
    driver: bridge
    